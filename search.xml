<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>linux</title>
      <link href="/2022/01/29/linux/"/>
      <url>/2022/01/29/linux/</url>
      
        <content type="html"><![CDATA[<h1 id="linux常用命令"><a href="#linux常用命令" class="headerlink" title="linux常用命令"></a>linux常用命令</h1><h4 id="一、基础"><a href="#一、基础" class="headerlink" title="一、基础"></a>一、基础</h4><ul><li><p>关机</p><blockquote><p>shutdown -h now/5 —— 立即/5分钟后关机</p><p>poweroff  —— 立即关机</p></blockquote></li><li><p>重启</p><blockquote><p>shutdown -r now/5 —— 立即/5分钟后重启</p><p>preboot  —— 立即关机</p></blockquote></li><li><p>帮助</p><blockquote><p>&lt;命令&gt; –help —— 帮助文档</p><p>man &lt;命令&gt; —— 说明书</p></blockquote></li><li><p>切换用户</p><blockquote><p>su —— su用于用户之间的切换。但是切换前的用户依然保持登录状态。如果是root 向普通或虚拟用户切换不需要密码，反之普通用户切换到其它任何用户都需要密码验证</p><pre class=" language-c"><code class="language-c">su test<span class="token punctuation">:</span>切换到test用户，但是路径还是<span class="token operator">/</span>root目录su <span class="token operator">-</span> test <span class="token punctuation">:</span> 切换到test用户，路径变成了<span class="token operator">/</span>home<span class="token operator">/</span>testsu <span class="token punctuation">:</span> 切换到root用户，但是路径还是原来的路径su <span class="token operator">-</span> <span class="token punctuation">:</span> 切换到root用户，并且路径是<span class="token operator">/</span>root</code></pre><p>sudo —— 切换到root用户</p></blockquote></li></ul><h4 id="二、目录"><a href="#二、目录" class="headerlink" title="二、目录"></a>二、目录</h4><ul><li><p>切换</p><blockquote><p>cd</p><blockquote><p>/ —— 切换到根目录</p><p>.. —— 切换到上级目录</p><p>- —— 切换到上次访问的目录</p><p>~ —— 切换到home目录</p></blockquote></blockquote></li><li><p>查看</p><blockquote><p>ls [-al]</p><blockquote><p>a —— 查看当前目录下所有文件及目录 包括隐藏文件</p><p>l —— 列表查看 信息显示更多</p><p>/dir —— 查看指定目录下的文件及目录</p></blockquote></blockquote></li><li><p>操作</p><ul><li><p>增</p><blockquote><p>mkdir 目录 —— 在当前/指定目录（/dir/目录）下创建目录</p></blockquote></li><li><p>删</p><blockquote><p>rm [-rf] 目录（或文件）</p><p>-r —— 递归删除 （删除当前目录下所有的文件）</p><p>-f —— 强制删除</p></blockquote></li><li><p>改</p><ul><li><p>重命名</p><blockquote><p>mv 当前目录 新目录 （也可以用于文件或者压缩包）</p></blockquote></li><li><p>剪切</p><blockquote><p>mv 目录名称 新目录位置 （也可以用于文件或者压缩包）</p></blockquote></li><li><p>拷贝</p><blockquote><p>cp -r（仅对目录操作时需要） 目录名称 拷贝的目标位置</p></blockquote></li></ul></li><li><p>查</p><blockquote><p>find 目录 参数 文件名称</p><p>例：find / -name *.apk 查找当前目录下的apk文件</p></blockquote></li><li><p>pwd —— 查看当前目录</p></li></ul></li></ul><h4 id="三、文件"><a href="#三、文件" class="headerlink" title="三、文件"></a>三、文件</h4><ul><li><p>增</p><blockquote><p>touch 文件名 </p></blockquote></li><li><p>删</p><blockquote><p>rm -rf 文件名</p></blockquote></li><li><p>改</p><blockquote><p>修改文件可以采用vim，具体的使用方法可查看<a href="https://tmoure.github.io/2022/01/26/vim/">vim</a></p></blockquote></li><li><p>查</p><ul><li><p>cat</p><blockquote><p>输出文件全部内容，显示定位到最后一页</p></blockquote></li><li><p>more</p><blockquote><p>从头开始百分比显示</p><p>​    回车 —— 向下一行</p><p>​    空格 —— 向下一页</p><p>​    q —— 退出查看</p></blockquote></li><li><p>less</p><blockquote><p>相较于more，无百分比显示 其余对文件的查看操作类似</p></blockquote></li><li><p>tail</p><blockquote><p>指定查看多少行</p><p>tail -10 文件名 指定查看文件后10行</p></blockquote></li></ul></li><li><p>权限修改</p><blockquote><p>chmod</p><p>​    读——4</p><p>​    写——2</p><p>​    执行——1</p></blockquote></li><li><p>解压缩</p><ul><li><p>打包/压缩</p><blockquote><p>在linux中可以识别的常见压缩格式有几十种，比如.zip、.gz、.bz2、.tar、.tar.gz、.tar.bz2等，Linux不支持.rar和.tz格式的压缩文件。</p></blockquote><ul><li><p>.zip格式：zip [选项] 压缩包名 源文件/源目录</p><blockquote><p>-r 压缩目录时使用</p></blockquote></li><li><p>.gz格式：gzip [选项] 源文件</p><blockquote><p>-c —— 将压缩数据输出到标准输出中，可以用于保留源文件</p><blockquote><p>使用gzip压缩文件后会将原文件删除，如果想保留原文件则可以使用-c选项将压缩过程产生的标准输出写入一个新的文件中，示例如下：&gt;的作用是覆盖内容，&gt;&gt;的作用是追加内容</p></blockquote><p>-d ——解压缩</p><blockquote><p>解压缩也可以使用gunzip：</p></blockquote><p>-r —— 压缩目录</p><blockquote><p>gzip命令不会打包压缩，即gzip -r xxx 表示将xxx目录下的文件每一个分别压缩</p></blockquote></blockquote></li><li><p>.bz2格式：bzip2 [选项] 源文件（<strong>bzip2不能压缩目录，会报错</strong>）</p><blockquote><p>-d —— 解压缩</p><p>-k —— 压缩式，保留源文件</p><p>-v ——  显示压缩的详细信息</p></blockquote></li><li><p>.tar格式：tar [选项] [-f 压缩包名] 源目录/源文件</p><blockquote><p>-c —— 打包</p><p>-f —— 指定压缩包的文件名</p><p>-v —— 显示详细的打包过程</p></blockquote></li></ul></li><li><p>解压</p><ul><li><p>unzip [选项] 压缩包名</p><blockquote><p>-d：指定解压缩位置</p></blockquote></li><li><p>tar [选项] 压缩包</p><blockquote><p>-x —— 解打包</p><p>-f —— 指定压缩包的文件名</p><p>-v —— 详细解打包信息</p><p>-t —— 测试，不解打包，只是查看包名中的文件</p></blockquote></li></ul></li></ul></li></ul><h4 id="四、查找"><a href="#四、查找" class="headerlink" title="四、查找"></a>四、查找</h4><ul><li><p>grep</p><pre class=" language-c"><code class="language-c">基本格式：grep <span class="token punctuation">[</span>选项<span class="token punctuation">]</span> pattern <span class="token punctuation">[</span>文件名<span class="token punctuation">]</span></code></pre><blockquote><p><strong>选项：</strong></p><pre class=" language-c"><code class="language-c"><span class="token string">''</span>'<span class="token operator">-</span><span class="token operator">?</span> 同时显示匹配行上下的？行，如：grep <span class="token operator">-</span><span class="token number">2</span> pattern filename 同时显示匹配行的上下<span class="token number">2</span>行。<span class="token operator">-</span>b，—byte<span class="token operator">-</span>offset 打印匹配行前面打印该行所在的块号码。<span class="token operator">-</span>c<span class="token punctuation">,</span>—count 只打印匹配的行数，不显示匹配的内容。<span class="token operator">-</span>f File，—file<span class="token operator">=</span>File 从文件中提取模板。空文件中包含<span class="token number">0</span>个模板，所以什么都不匹配。<span class="token operator">-</span>h，—no<span class="token operator">-</span>filename 当搜索多个文件时，不显示匹配文件名前缀。<span class="token operator">-</span>i，—ignore<span class="token operator">-</span><span class="token keyword">case</span> 忽略大小写差别。<span class="token operator">-</span>q，—quiet 取消显示，只返回退出状态。<span class="token number">0</span>则表示找到了匹配的行。<span class="token operator">-</span>l，—files<span class="token operator">-</span>with<span class="token operator">-</span>matches 打印匹配模板的文件清单。<span class="token operator">-</span>L，—files<span class="token operator">-</span>without<span class="token operator">-</span>match 打印不匹配模板的文件清单。<span class="token operator">-</span>n，—line<span class="token operator">-</span>number 在匹配的行前面打印行号。<span class="token operator">-</span>s，—silent 不显示关于不存在或者无法读取文件的错误信息。<span class="token operator">-</span>v，—revert<span class="token operator">-</span>match 反检索，只显示不匹配的行。<span class="token operator">-</span>w，—word<span class="token operator">-</span>regexp 如果被\<span class="token operator">&lt;</span>和<span class="token operator">></span>引用，就把表达式做为一个单词搜索。<span class="token operator">-</span>V，—version 显示软件版本信息。<span class="token string">''</span>'</code></pre></blockquote><blockquote><p>**pattern:**所要匹配的字符串</p><pre class=" language-c"><code class="language-c"><span class="token punctuation">.</span> 匹配任意一个字符<span class="token operator">*</span> 匹配 <span class="token number">0</span> 个或多个 <span class="token operator">*</span> 前的字符<span class="token operator">^</span> 匹配行开头$ 匹配行结尾<span class="token punctuation">[</span><span class="token punctuation">]</span> 匹配 <span class="token punctuation">[</span> <span class="token punctuation">]</span> 中的任意一个字符，<span class="token punctuation">[</span><span class="token punctuation">]</span> 中可用 <span class="token operator">-</span> 表示范围，例如 <span class="token punctuation">[</span>a<span class="token operator">-</span>z<span class="token punctuation">]</span> 表示字母 a 至z 中的任意一个\ 转意字符</code></pre></blockquote><blockquote><p><strong>例子：</strong></p><pre class=" language-c"><code class="language-c">ls <span class="token operator">-</span>l <span class="token operator">|</span> grep <span class="token string">'^a'</span> 通过管道过滤ls <span class="token operator">-</span>l输出的内容，只显示以a开头的行。grep <span class="token string">'test'</span> d<span class="token operator">*</span> 显示所有以d开头的文件中包含test的行。grep <span class="token string">'test'</span> aa bb cc 显示在aa，bb，cc文件中匹配test的行。grep <span class="token string">'[a-z]'</span> aa 显示所有包含每个字符串至少有<span class="token number">5</span>个连续小写字符的字符串的行。grep <span class="token string">'w(es)t.*'</span> aa 如果west被匹配，则es就被存储到内存中，并标记为<span class="token number">1</span>，然后搜索任意个字符<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">)</span>，这些字符后面紧跟着另外一个<span class="token function">es</span><span class="token punctuation">(</span><span class="token punctuation">)</span>，找到就显示该行。如果用egrep或grep <span class="token operator">-</span>E，就不用<span class="token string">""</span>号进行转义，直接写成<span class="token string">'w(es)t.*'</span>就可以了。grep <span class="token operator">-</span>i pattern files ：不区分大小写地搜索。默认情况区分大小写grep <span class="token operator">-</span>l pattern files ：只列出匹配的文件名，grep <span class="token operator">-</span>L pattern files ：列出不匹配的文件名，grep <span class="token operator">-</span>w pattern files ：只匹配整个单词，而不是字符串的一部分<span class="token punctuation">(</span>如匹配‘magic’，而不是‘magical’<span class="token punctuation">)</span>，grep <span class="token operator">-</span>C number pattern files ：匹配的上下文分别显示<span class="token punctuation">[</span>number<span class="token punctuation">]</span>行，grep pattern1 <span class="token operator">|</span> pattern2 files ：显示匹配 pattern1 或 pattern2 的行，grep pattern1 files <span class="token operator">|</span> grep pattern2 ：显示既匹配 pattern1 又匹配 pattern2 的行。</code></pre></blockquote></li><li><p>find</p><blockquote><pre class=" language-c"><code class="language-c">find <span class="token operator">&lt;</span> path <span class="token operator">></span> <span class="token operator">&lt;</span> expression <span class="token operator">></span> <span class="token operator">&lt;</span> cmd <span class="token operator">></span><span class="token string">''</span>'path： 所要搜索的目录及其所有子目录。默认为当前目录。expression： 所要搜索的文件的特征。cmd： 对搜索结果进行特定的处理。如果什么参数也不加，find默认搜索当前目录及其子目录，并且不过滤任何结果（也就是返回所有文件），将它们全都显示在屏幕上。<span class="token string">''</span>'</code></pre></blockquote><p><strong>常用选项：</strong></p><ul><li><p>-name：按照文件名查找文件</p><pre class=" language-c"><code class="language-c"># 在<span class="token operator">/</span>dir目录及其子目录下面查找名字为filename的文件find <span class="token operator">/</span>dir <span class="token operator">-</span>name filename # 在当前目录及其子目录（用“<span class="token punctuation">.</span>”表示）中查找任何扩展名为“c”的文件find <span class="token punctuation">.</span> <span class="token operator">-</span>name <span class="token string">"*.c"</span> # 在 etc 目录下，查找大写字母开头的 txt 文件find <span class="token operator">/</span>etc <span class="token operator">-</span>name <span class="token string">"[A-Z]*.txt"</span> <span class="token operator">-</span>print                               #<span class="token operator">-</span>print 将结果输出到标准输出# 在当前目录下查找不是 out 开头的 txt 文件find <span class="token punctuation">.</span> <span class="token operator">-</span>name <span class="token string">"out*"</span> <span class="token operator">-</span>prune <span class="token operator">-</span>o <span class="token operator">-</span>name <span class="token string">"*.txt"</span> <span class="token operator">-</span>print            #<span class="token operator">-</span>o 或者 <span class="token operator">-</span>a 并且 <span class="token operator">-</span>not 非# 在当前目录除 git 子目录外查找 txt 文件find <span class="token punctuation">.</span> <span class="token operator">-</span>path <span class="token string">"./git"</span> <span class="token operator">-</span>prune <span class="token operator">-</span>o <span class="token operator">-</span>name <span class="token string">"*.txt"</span> <span class="token operator">-</span>print# 找出某个文件的所有硬链接，ls 命令 <span class="token operator">-</span>i 选项可以查看文件的 inode 号ls <span class="token operator">-</span>i <span class="token number">1</span><span class="token punctuation">.</span>txt  # <span class="token number">138956</span> <span class="token number">1</span><span class="token punctuation">.</span>txtfind <span class="token punctuation">.</span> <span class="token operator">-</span>num <span class="token number">138956</span># 搜索文件时使用 <span class="token operator">-</span>iname 参数可以忽略文件名称大小写</code></pre></li><li><p>-perm：按照文件权限来查找文件</p><pre class=" language-c"><code class="language-c">find <span class="token punctuation">.</span> <span class="token operator">-</span>perm <span class="token number">755</span> –print # 在当前目录下查找文件权限位为<span class="token number">755</span>的文件，即文件属主可以读、写、执行，其他用户可以读、执行的文件</code></pre></li><li><p>-prune：使 find 命令不在当前指定的目录中查找，如果同时使用 -depth 选项，那么 -prune 将被 find 命令忽略</p><pre class=" language-c"><code class="language-c">find <span class="token operator">/</span>apps <span class="token operator">-</span>path <span class="token string">"/apps/bin"</span> <span class="token operator">-</span>prune <span class="token operator">-</span>o –print # 在<span class="token operator">/</span>apps目录下查找文件，但不希望在<span class="token operator">/</span>apps<span class="token operator">/</span>bin目录下查找find <span class="token operator">/</span>usr<span class="token operator">/</span>sam <span class="token operator">-</span>path <span class="token string">"/usr/sam/dir1"</span> <span class="token operator">-</span>prune <span class="token operator">-</span>o –print # 在<span class="token operator">/</span>usr<span class="token operator">/</span>sam目录下查找不在dir1子目录之内的所有文件</code></pre></li><li><p>-depth：在查找文件时，首先查找当前目录中的文件，然后再在其子目录中查找</p><pre class=" language-c"><code class="language-c">find <span class="token operator">/</span> <span class="token operator">-</span>name <span class="token string">"CON.FILE"</span> <span class="token operator">-</span>depth –print # 它将首先匹配所有的文件然后再进入子目录中查找</code></pre></li><li><p>-user：照文件属主来查找文件</p><pre class=" language-c"><code class="language-c">find <span class="token operator">~</span> <span class="token operator">-</span>user sam –print # 在$HOME目录中查找文件属主为sam的文件</code></pre></li><li><p>-group：按照文件所属的组来查找文件</p><pre class=" language-c"><code class="language-c">find <span class="token operator">/</span>apps <span class="token operator">-</span>group gem –print # 在<span class="token operator">/</span>apps目录下查找属于gem用户组的文件</code></pre></li><li><p>-mtime -n +n：按照文件的更改时间来查找文件， -n 表示文件更改时间距现在n天以内，+n 表示文件更改时间距现在 n 天以前</p><pre class=" language-c"><code class="language-c">find <span class="token operator">/</span> <span class="token operator">-</span>mtime <span class="token operator">-</span><span class="token number">5</span> –print # 在系统根目录下查找更改时间在<span class="token number">5</span>日以内的文件find <span class="token operator">/</span>var<span class="token operator">/</span>adm <span class="token operator">-</span>mtime <span class="token operator">+</span><span class="token number">3</span> –print # 在<span class="token operator">/</span>var<span class="token operator">/</span>adm目录下查找更改时间在<span class="token number">3</span>日以前的文件</code></pre></li><li><p>-nogroup：查找无有效所属组的文件，即该文件所属的组在 /etc/groups 中不存在</p><pre class=" language-c"><code class="language-c">find <span class="token operator">/</span> –nogroup <span class="token operator">-</span>print</code></pre></li><li><p>-nouser：查找无有效属主的文件，即该文件的属主在 /etc/passwd 中不存在</p><pre class=" language-c"><code class="language-c">find <span class="token operator">/</span>home <span class="token operator">-</span>nouser –print</code></pre></li><li><p>-newer file1 ! file2：查找更改时间比文件 file1 新但比文件 file2 旧的文件</p></li><li><p>-type 查找某一类型的文件</p><blockquote><ul><li><p>b - 块设备文件，比如磁盘。</p></li><li><p>d - 目录。</p></li><li><p>c - 字符设备文件，比如鼠标键盘网卡。</p></li><li><p>p - 管道文件。</p></li><li><p>l - 符号链接文件。</p></li><li><p>f - 普通文件。</p><pre class=" language-c"><code class="language-c">find <span class="token operator">/</span>etc <span class="token operator">-</span>type d –print # 在<span class="token operator">/</span>etc目录下查找所有的目录find <span class="token punctuation">.</span> <span class="token operator">!</span> <span class="token operator">-</span>type d –print # 在当前目录下查找除目录以外的所有类型的文件find <span class="token operator">/</span>etc <span class="token operator">-</span>type l –print # 在<span class="token operator">/</span>etc目录下查找所有的符号链接文件</code></pre></li></ul></blockquote></li><li><p>-size n[c]：查找文件长度为 n 块的文件，带有 c 时表示文件长度以字节计</p><pre class=" language-c"><code class="language-c">find <span class="token punctuation">.</span> <span class="token operator">-</span>size <span class="token operator">+</span>1000000c –print # 在当前目录下查找文件长度大于<span class="token number">1</span> M字节的文件find <span class="token operator">/</span>home<span class="token operator">/</span>apache <span class="token operator">-</span>size 100c –print # 在<span class="token operator">/</span>home<span class="token operator">/</span>apache目录下查找文件长度恰好为<span class="token number">100</span>字节的文件find <span class="token punctuation">.</span> <span class="token operator">-</span>size <span class="token operator">+</span><span class="token number">10</span> –print # 在当前目录下查找长度超过<span class="token number">10</span>块的文件（一块等于<span class="token number">512</span>字节）</code></pre></li><li><p>-mount：在查找文件时不跨越文件系统 mount 点</p><pre class=" language-c"><code class="language-c">find <span class="token punctuation">.</span> <span class="token operator">-</span>name “<span class="token operator">*</span><span class="token punctuation">.</span>XC” <span class="token operator">-</span>mount –print # 从当前目录开始查找位于本文件系统中文件名以XC结尾的文件（不进入其他文件系统）</code></pre></li><li><p>-follow：如果 find 命令遇到符号链接文件，就跟踪至链接所指向的文件</p></li><li><p>-exec：find 命令对匹配的文件执行该参数所给出的 shell 命令。相应命令的形式为 ’command’ {} ;，注意 {} 和 ; 之间的空格</p><pre class=" language-c"><code class="language-c">$ find <span class="token punctuation">.</span><span class="token operator">/</span> <span class="token operator">-</span>size <span class="token number">0</span> <span class="token operator">-</span>exec rm <span class="token punctuation">{</span><span class="token punctuation">}</span> \<span class="token punctuation">;</span> # 删除文件大小为零的文件$ rm <span class="token operator">-</span>i `find <span class="token punctuation">.</span><span class="token operator">/</span> <span class="token operator">-</span>size <span class="token number">0</span>`$ find <span class="token punctuation">.</span><span class="token operator">/</span> <span class="token operator">-</span>size <span class="token number">0</span> <span class="token operator">|</span> xargs rm <span class="token operator">-</span>f <span class="token operator">&amp;</span># 为了用ls <span class="token operator">-</span>l命令列出所匹配到的文件，可以把ls <span class="token operator">-</span>l命令放在find命令的<span class="token operator">-</span>exec选项中：$ find <span class="token punctuation">.</span> <span class="token operator">-</span>type f <span class="token operator">-</span>exec ls <span class="token operator">-</span>l <span class="token punctuation">{</span><span class="token punctuation">}</span> \<span class="token punctuation">;</span># 在<span class="token operator">/</span>logs目录中查找更改时间在<span class="token number">5</span>日以前的文件并删除它们：find <span class="token operator">/</span>logs <span class="token operator">-</span>type f <span class="token operator">-</span>mtime <span class="token operator">+</span><span class="token number">5</span> <span class="token operator">-</span>exec rm <span class="token punctuation">{</span><span class="token punctuation">}</span> \<span class="token punctuation">;</span></code></pre></li><li><p>-ok：和 -exec 的作用相同，只不过以一种更为安全的模式来执行该参数所给出的 shell 命令，在执行每一个命令之前，都会给出提示，让用户来确定是否执行</p></li></ul></li><li><p>locate</p><p>locate类似于find -name，搜索速度更快（不搜索具体目录，而是搜索一个数据库（/var/lib/locatedb），这个数据库中含有本地所有文件信息）</p><blockquote><p>Linux 系统自动创建这个数据库，并且每天自动更新一次，所以使用 locate 命令查不到最新变动过的文件。为了避免这种情况，可以在使用 locate 之前，先使用 <strong>updatedb 命令</strong>，手动更新数据库。</p></blockquote><pre class=" language-c++"><code class="language-c++"># 搜索用户主目录下，所有以m开头的文件，并且忽略大小写。$ locate -i ~/m</code></pre></li><li><p>whereis</p><p>whereis 命令只能用于<strong>程序名的搜索</strong>，而且只搜索二进制文件（参数-b）、man说明文件（参数-m）和源代码文件（参数-s）。如果省略参数，则返回所有信息。</p><pre class=" language-c"><code class="language-c">$ whereis grep<span class="token macro property"># grep: /bin/grep /usr/share/man/man1p/grep.1p.gz /usr/share/man/man1/grep.1.gz</span></code></pre></li><li><p>which</p><p>which 命令的作用是，在 <strong>PATH 变量指定</strong>的路径中，搜索某个<strong>系统命令</strong>的位置，并且返回第一个搜索结果。也就是说，使用 which 命令，就可以看到某个系统命令是否存在，以及执行的到底是哪一个位置的命令。</p><pre class=" language-c"><code class="language-c">$ which grep# <span class="token operator">/</span>bin<span class="token operator">/</span>grep</code></pre></li></ul><h4 id="五、进程"><a href="#五、进程" class="headerlink" title="五、进程"></a>五、进程</h4><p>Linux中的ps命令是<strong>Process Status</strong>的缩写。ps命令用来列出系统中当前运行的那些进程。ps命令列出的是当前那些进程的快照，</p><p>就是执行ps命令的那个时刻的那些进程，<strong>如果想要动态的显示进程信息，就可以使用top命令</strong>。</p><ul><li><p>进程输出说明</p><pre class=" language-c"><code class="language-c">F S   UID    PID   PPID  C PRI  NI ADDR SZ WCHAN  TTY          TIME CMD<span class="token number">0</span> R  <span class="token number">1000</span>   <span class="token number">9455</span>  <span class="token number">79650</span>  <span class="token number">0</span>  <span class="token number">80</span>   <span class="token number">0</span> <span class="token operator">-</span>  <span class="token number">7657</span> <span class="token operator">-</span>      pts<span class="token operator">/</span><span class="token number">4</span>    <span class="token number">00</span><span class="token punctuation">:</span><span class="token number">00</span><span class="token punctuation">:</span><span class="token number">00</span> ps<span class="token number">0</span> S  <span class="token number">1000</span>  <span class="token number">79650</span>  <span class="token number">79575</span>  <span class="token number">0</span>  <span class="token number">80</span>   <span class="token number">0</span> <span class="token operator">-</span>  <span class="token number">6093</span> wait   pts<span class="token operator">/</span><span class="token number">4</span>    <span class="token number">00</span><span class="token punctuation">:</span><span class="token number">00</span><span class="token punctuation">:</span><span class="token number">00</span> bashF 代表这个程序的旗标 <span class="token punctuation">(</span>flag<span class="token punctuation">)</span>， <span class="token number">4</span> 代表使用者为 super userS 代表这个程序的状态 <span class="token punctuation">(</span>STAT<span class="token punctuation">)</span>，关于各 STAT 的意义将在内文介绍UID 程序被该 UID 所拥有PID 就是这个程序的 ID ！PPID 则是其上级父程序的IDC CPU 使用的资源百分比PRI 这个是 <span class="token function">Priority</span> <span class="token punctuation">(</span>优先执行序<span class="token punctuation">)</span> 的缩写，详细后面介绍NI 这个是 Nice 值，在下一小节我们会持续介绍ADDR 这个是 kernel function，指出该程序在内存的那个部分。如果是个 running的程序，一般就是 <span class="token string">"-"</span>SZ 使用掉的内存大小WCHAN 目前这个程序是否正在运作当中，若为 <span class="token operator">-</span> 表示正在运作TTY 登入者的终端机位置TIME 使用掉的 CPU 时间。CMD 所下达的指令为何在预设的情况下， ps 仅会列出与目前所在的 bash shell 有关的 PID 而已，所以， 当我使用 ps <span class="token operator">-</span>l 的时候，只有三个 PID</code></pre></li><li><p>命令参数</p></li></ul><pre class=" language-c"><code class="language-c">命令参数：a  显示所有进程<span class="token operator">-</span>a 显示同一终端下的所有程序<span class="token operator">-</span>A 显示所有进程c  显示进程的真实名称<span class="token operator">-</span>N 反向选择<span class="token operator">-</span>e 等于“<span class="token operator">-</span>A”e  显示环境变量f  显示程序间的关系<span class="token operator">-</span>H 显示树状结构r  显示当前终端的进程T  显示当前终端的所有程序u  指定用户的所有进程<span class="token operator">-</span>au 显示较详细的资讯<span class="token operator">-</span>aux 显示所有包含其他使用者的行程 <span class="token operator">-</span>C<span class="token operator">&lt;</span>命令<span class="token operator">></span> 列出指定命令的状况<span class="token operator">--</span>lines<span class="token operator">&lt;</span>行数<span class="token operator">></span> 每页显示的行数<span class="token operator">--</span>width<span class="token operator">&lt;</span>字符数<span class="token operator">></span> 每页显示的字符数<span class="token operator">--</span>help 显示帮助信息<span class="token operator">--</span>version 显示版本显示</code></pre><ul><li><p>pstree —— 以树结构显示进程</p><blockquote><p>pstree -p work | grep ad           #work为工作用户，-p为显示进程识别码</p></blockquote></li><li><p>ps -Lf</p><pre class=" language-c"><code class="language-c">linux上进程有<span class="token number">5</span>种状态<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">.</span> 运行<span class="token punctuation">(</span>正在运行或在运行队列中等待<span class="token punctuation">)</span><span class="token number">2</span><span class="token punctuation">.</span> 中断<span class="token punctuation">(</span>休眠中<span class="token punctuation">,</span> 受阻<span class="token punctuation">,</span> 在等待某个条件的形成或接受到信号<span class="token punctuation">)</span><span class="token number">3</span><span class="token punctuation">.</span> 不可中断<span class="token punctuation">(</span>收到信号不唤醒和不可运行<span class="token punctuation">,</span> 进程必须等待直到有中断发生<span class="token punctuation">)</span><span class="token number">4</span><span class="token punctuation">.</span> 僵死<span class="token punctuation">(</span>进程已终止<span class="token punctuation">,</span> 但进程描述符存在<span class="token punctuation">,</span> 直到父进程调用<span class="token function">wait4</span><span class="token punctuation">(</span><span class="token punctuation">)</span>系统调用后释放<span class="token punctuation">)</span><span class="token number">5</span><span class="token punctuation">.</span> 停止<span class="token punctuation">(</span>进程收到SIGSTOP<span class="token punctuation">,</span> SIGSTP<span class="token punctuation">,</span> SIGTIN<span class="token punctuation">,</span> SIGTOU信号后停止运行运行<span class="token punctuation">)</span>ps工具标识进程的<span class="token number">5</span>种状态码<span class="token punctuation">:</span>D 不可中断 uninterruptible <span class="token function">sleep</span> <span class="token punctuation">(</span>usually IO<span class="token punctuation">)</span>R 运行 <span class="token function">runnable</span> <span class="token punctuation">(</span>on run queue<span class="token punctuation">)</span>S 中断 sleepingT 停止 traced or stoppedZ 僵死 a <span class="token function">defunct</span> <span class="token punctuation">(</span>”zombie”<span class="token punctuation">)</span> process</code></pre></li><li><p>pstack —— 显示每个进程的栈跟踪</p><blockquote><p>pstack pid</p></blockquote></li><li><p>kill —— 终止进程</p><pre class=" language-c"><code class="language-c">有十几种控制进程的方法，下面是一些常用的方法<span class="token punctuation">:</span>kill <span class="token operator">-</span>STOP <span class="token punctuation">[</span>pid<span class="token punctuation">]</span>发送<span class="token function">SIGSTOP</span> <span class="token punctuation">(</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">)</span>停止一个进程，而并不消灭这个进程。kill <span class="token operator">-</span>CONT <span class="token punctuation">[</span>pid<span class="token punctuation">]</span>发送<span class="token function">SIGCONT</span> <span class="token punctuation">(</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">)</span>重新开始一个停止的进程。kill <span class="token operator">-</span>KILL <span class="token punctuation">[</span>pid<span class="token punctuation">]</span>发送<span class="token function">SIGKILL</span> <span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span>强迫进程立即停止，并且不实施清理操作。kill <span class="token operator">-</span><span class="token number">9</span> <span class="token operator">-</span><span class="token number">1</span>终止你拥有的全部进程。SIGKILL 和 SIGSTOP 信号不能被捕捉、封锁或者忽略，但是，其它的信号可以。所以这是你的终极武器。</code></pre></li><li><p>ps -A —— 显示所有进程信息</p></li><li><p>ps -ef —— 显示所有进程信息，连同命令行</p></li></ul><h4 id="六、非常用"><a href="#六、非常用" class="headerlink" title="六、非常用"></a>六、非常用</h4><ul><li><p>关闭防火墙</p><pre class=" language-c"><code class="language-c">chkconfig iptables off</code></pre></li><li><p>重启网络</p><pre class=" language-c"><code class="language-c">service network restart</code></pre></li><li><p>定时任务指令 <strong>crontab</strong> </p></li><li><p>网络通信</p><pre class=" language-c"><code class="language-c">ifconfig：查看网卡信息命令：ifconfig 或 ifconfig <span class="token operator">|</span> moreping：查看与某台机器的连接情况命令：ping ipnetstat <span class="token operator">-</span>an：查看当前系统端口命令：netstat <span class="token operator">-</span>an搜索指定端口命令：netstat <span class="token operator">-</span>an <span class="token operator">|</span> grep <span class="token number">8080</span></code></pre></li><li><p>系统服务</p><pre class=" language-c"><code class="language-c">service iptables status  <span class="token operator">--</span>查看iptables服务的状态service iptables start  <span class="token operator">--</span>开启iptables服务service iptables stop  <span class="token operator">--</span>停止iptables服务service iptables restart  <span class="token operator">--</span>重启iptables服务 chkconfig iptables off  <span class="token operator">--</span>关闭iptables服务的开机自启动chkconfig iptables on  <span class="token operator">--</span>开启iptables服务的开机自启动</code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> 老谭 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
            <tag> 命令行 </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>typora</title>
      <link href="/2022/01/29/typora/"/>
      <url>/2022/01/29/typora/</url>
      
        <content type="html"><![CDATA[<h1 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h1><p>typora有三种编辑方式：图形化界面操作、快捷键操作以及代码操作。</p><p>例：将文字改为黑体</p><ul><li>图形化<blockquote><p>选中文字点击右键 ——选择B</p></blockquote></li><li>快捷键<blockquote><p>选中文字 —— ctrl+B</p></blockquote></li><li>代码<blockquote><p>*<em>内容</em>*</p></blockquote><blockquote><p>需要注意的是：用代码撰写时，需要灵活使用\</p><p>例如：想要打出**小曹**，如果直接编写呈现的结果将是为将小曹二字加粗，因此需要在两个*前面加一个\转义符，代表*为内容而不是代码</p></blockquote></li></ul><h4 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h4><ul><li><p>图形化</p><blockquote><p>右键 —— 段落</p></blockquote></li><li><p>快捷键</p><blockquote><p>ctrl + 数字键</p></blockquote></li><li><p>代码</p><blockquote><p># —— 1级标题</p><p>## —— 2级标题</p><p>### —— 3级标题</p><p>……..</p></blockquote></li></ul><h4 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h4><ul><li>图形化<blockquote><p>右键 —— 双引号‘’</p></blockquote></li><li>快捷键<blockquote><p>ctrl + shift +Q</p></blockquote></li><li>代码<blockquote><p>&gt;加内容即可</p></blockquote></li></ul><h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h4><ul><li>图形化<blockquote><p>右键 —— 第二行第三个</p></blockquote></li><li>快捷键<blockquote><p>ctrl + shift + ]</p></blockquote></li><li>代码<blockquote><p>- 加内容</p></blockquote></li></ul><h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h4><ul><li>图形化<blockquote><p>右键——第二行第二个</p></blockquote></li><li>快捷键<blockquote><p>ctrl + shift + [</p></blockquote></li></ul><h4 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h4><ul><li>图形化<blockquote><p>右键——第一行第三个</p></blockquote></li><li>快捷键<blockquote><p>ctrl + shift + k</p></blockquote></li><li>代码<blockquote><p>```+需要的代码语言</p></blockquote></li></ul><h4 id="公式块"><a href="#公式块" class="headerlink" title="公式块"></a>公式块</h4><p>公式块的内容写法类似于latex语法 此处不赘述 （反正小曹也用不到 ^_^）</p><ul><li>图形化<blockquote><p>右键 —— 插入 —— 公式块</p></blockquote></li><li>快捷键<blockquote><p>ctrl + shift + M</p></blockquote></li><li>代码<blockquote><p>$$</p><p>内容</p><p>$$</p></blockquote></li></ul><h4 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h4><ul><li>图形化<blockquote><p>右键  ——  插入  ——  图像</p></blockquote></li><li>快捷键<blockquote><p>ctrl + shift + i</p></blockquote></li><li>代码<blockquote><p>![图片描述](图片路径)</p></blockquote></li></ul><h4 id="插入表格"><a href="#插入表格" class="headerlink" title="插入表格"></a>插入表格</h4><ul><li>图形化<blockquote><p>右键  ——  插入  ——  表格</p></blockquote></li><li>快捷键<blockquote><p>ctrl + t</p></blockquote></li></ul><h4 id="插入超链接"><a href="#插入超链接" class="headerlink" title="插入超链接"></a>插入超链接</h4><ul><li>图形化<blockquote><p>右键  ——  第一行第四个</p></blockquote></li><li>快捷键<blockquote><p>ctrl + k</p></blockquote></li><li>代码<blockquote><p>[链接描述](链接地址)</p></blockquote></li></ul><h4 id="文字操作"><a href="#文字操作" class="headerlink" title="文字操作"></a>文字操作</h4><h5 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a>加粗</h5><p>——见开头 此处略</p><h5 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h5><ul><li>图形化<blockquote><p>选中文字点击右键 ——  选择I</p></blockquote></li><li>快捷键<blockquote><p>选中文字  ——  ctrl+i</p></blockquote></li><li>代码<blockquote><p>*内容*</p></blockquote></li></ul><h5 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h5><p>内容[^内容]</p><h5 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h5><ul><li>图形化<blockquote><p>选中文字点击右键 ——  左上角选择格式  ——  下划线</p></blockquote></li><li>快捷键<blockquote><p>选中文字  ——  ctrl+u</p></blockquote></li><li>代码<blockquote><p>&lt;u&gt;内容</p></blockquote></li></ul><h5 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h5><ul><li><p>图形化</p><blockquote><p>选中文字点击右键 ——  左上角选择格式  ——  删除线</p></blockquote></li><li><p>快捷键</p><blockquote><p>选中文字  ——  alt+shift+5</p></blockquote></li><li><p>代码</p><blockquote><p>~~内容~~</p></blockquote></li></ul><h5 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h5><ul><li>图形化<blockquote><p>选中文字点击右键 —— 左上角选择段落 —— 水平分割线</p></blockquote></li><li>代码<blockquote><p>— + enter</p></blockquote></li></ul><h4 id="其他快捷键"><a href="#其他快捷键" class="headerlink" title="其他快捷键"></a>其他快捷键</h4><h5 id="文章跳转"><a href="#文章跳转" class="headerlink" title="文章跳转"></a>文章跳转</h5><ul><li>跳转到开头<blockquote><p>ctrl + home</p></blockquote></li><li>跳转到结尾<blockquote><p>ctrl + end</p></blockquote></li></ul><h5 id="文本选中"><a href="#文本选中" class="headerlink" title="文本选中"></a>文本选中</h5><blockquote><p>ctrl + d</p></blockquote><h5 id="按行居中"><a href="#按行居中" class="headerlink" title="按行居中"></a>按行居中</h5><blockquote><p>ctrl + l</p></blockquote><h5 id="快速搜索"><a href="#快速搜索" class="headerlink" title="快速搜索"></a>快速搜索</h5><blockquote><p>ctrl + f</p></blockquote><h5 id="替换"><a href="#替换" class="headerlink" title="替换"></a>替换</h5><blockquote><p>ctrl + h</p></blockquote><h5 id="快速打开最近使用笔记"><a href="#快速打开最近使用笔记" class="headerlink" title="快速打开最近使用笔记"></a>快速打开最近使用笔记</h5><blockquote><p>ctrl + h</p></blockquote><h5 id="生成目录"><a href="#生成目录" class="headerlink" title="生成目录"></a>生成目录</h5><blockquote><p>[toc] + enter</p></blockquote><h5 id="关键字着重"><a href="#关键字着重" class="headerlink" title="关键字着重"></a>关键字着重</h5><blockquote><p>ctrl + shift + `</p></blockquote><h5 id="全屏显示"><a href="#全屏显示" class="headerlink" title="全屏显示"></a>全屏显示</h5><blockquote><p>f11</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 老谭 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 编辑器 </tag>
            
            <tag> typora </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客教程</title>
      <link href="/2022/01/27/bo-ke-jiao-cheng/"/>
      <url>/2022/01/27/bo-ke-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo教程"><a href="#hexo教程" class="headerlink" title="hexo教程"></a>hexo教程</h1><h4 id="打开源文件"><a href="#打开源文件" class="headerlink" title="打开源文件"></a>打开源文件</h4><ul><li><p>打开我的电脑（可用win+e快捷键）</p></li><li><p>文件路径为</p></li></ul><h4 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h4><ul><li>在源文件目录下空白处鼠标右键选择 <code>git bash here</code> </li><li>等待出现以下画面时，输入hexo new 文章名字</li><li>在tmoure/source目录下就会找到你的文章的md文件以及资源存放的文件夹</li></ul><h4 id="编辑文章"><a href="#编辑文章" class="headerlink" title="编辑文章"></a>编辑文章</h4><ul><li><p>打开 <code>文章名.md</code> 文件</p></li><li><p>属性</p><blockquote><p>常用属性：</p><p>categories——分类（老谭或者小草）</p><p>tags——标签</p></blockquote><p>其余属性可参考模板：</p></li><li><p>typora使用教程可参考<a href=""></a></p></li></ul><h4 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h4><ul><li>回到git命令行界面</li><li>hexo clean 清楚缓存</li><li>hexo g -d 渲染并上传</li></ul>]]></content>
      
      
      <categories>
          
          <category> 老谭 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vim</title>
      <link href="/2022/01/26/vim/"/>
      <url>/2022/01/26/vim/</url>
      
        <content type="html"><![CDATA[<h1 id="Vim"><a href="#Vim" class="headerlink" title="Vim"></a>Vim</h1><p><img src="/2022/01/26/vim/vim%5Cvim%E9%94%AE%E7%9B%98%E5%9B%BE.png"></p><blockquote><p>Vim 是从 vi 发展出来的一个具有代码补全、编译及错误跳转等功能的文本编辑器</p></blockquote><h4 id="一、工作模式"><a href="#一、工作模式" class="headerlink" title="一、工作模式"></a>一、工作模式</h4><p><img src="/2022/01/26/vim/vim%5Cvim%E5%B7%A5%E4%BD%9C%E6%A8%A1%E5%BC%8F.png"></p><ul><li><p>命令模式</p><p>启动vim编辑器，就进入了命令模式</p><blockquote><p>常用：</p><p>i：进入输入模式</p><p>：进行底线命令模式</p><p>x：删除当前字符</p></blockquote></li><li><p>输入模式</p><blockquote><p>可以进行文字编辑以及一些常用的键盘操作</p></blockquote></li><li><p>底线命令模式</p><blockquote><p>q：推出程序</p><p>w：保存</p></blockquote></li></ul><h4 id="二、指令"><a href="#二、指令" class="headerlink" title="二、指令"></a>二、指令</h4><ul><li><p>命令模式</p><ul><li><p>光标移动</p><blockquote><p>常用：</p><ul><li>方向键/hjkl——上下左右移动</li><li>page up/page down ——上下翻页</li><li>0——移动到当前行起始处</li><li>$——移动到当前行末尾</li><li>gg——移动到该文件的第一行</li><li>G——移动到该文件的最后一行</li><li>n<enter>——下移n行</enter></li><li>n<space>——当前行向后移动n个字符</space></li></ul><p>不常用：</p><ul><li>ctrl d/u——上下翻页（半页）</li><li>+/-  ——移动到非空格符的上/下一行</li><li>nG——移动到文件的底n行</li></ul></blockquote></li><li><p>搜索替换</p><blockquote><p>常用：</p><p>/word —— 向下查询某字符串</p><p>？word —— 向上查询某字符串</p><p>n/N —— 重复上一个命令/反向重复上一个命令</p><p>:1,$s/word1/word2/gc 或 :%s/word1/word2/gc  —— 从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2 ！且在取代前显示提示字符给用户确认 (confirm) 是否需要取代</p><p>（gc为用户确认 g不需用户确认）</p><p>不常用：</p><p>:n1,n2s/word1/word2/g ——n1 与 n2 为数字。在第 n1 与 n2 行之间寻找 word1 这个字符串，并将该字符串取代为 word2 </p><blockquote><p>例：『:100,200s/vbird/VBIRD/g』表示在 100 到 200 行之间搜寻 vbird 并取代为 VBIRD </p></blockquote></blockquote></li><li><p>粘贴复制删除</p><blockquote><p>常用：</p><p>x/X——向后/向前删除一个字符</p><p>dd——删除一整行</p><p>ndd——删除光标所在的向下n行</p><p>yy——复制游标所在的那一行</p><p>nyy——复制光标所在的向下 n 行</p><p>p/P——p 为将已复制的数据在光标下一行上粘贴，P 则为粘贴在游标上一行</p><p>u——复原前一个动作</p><p>ctrl+r——重做上一个动作</p><p>.——重复上一个动作</p><p>不常用：</p><p>nx——连续向后删除n个字符</p><p>d1G——删除光标所在到第一行的所有数据</p><p>dG——删除光标所在到最后一行的所有数据</p><p>d$——删除光标所在到该行最后一个字符的所有数据</p><p>d0——删除游标所在处，到该行的最前面一个字符</p><p>y1G——复制光标所在到第一行的所有数据</p><p>yG——复制光标所在到最后一行的所有数据</p><p>y$——复制光标所在到该行最后一个字符的所有数据</p><p>y0——复制游标所在处，到该行的最前面一个字符</p></blockquote></li></ul></li><li><p>输入模式</p><blockquote><p>i a o ——进入输入模式</p><p>r——进入replace模式</p><p>esc——退出输入模式</p><blockquote><p>还有大写的IAOR 也可以达到类似的效果 只是进入后的光标所在位置不一样而已</p></blockquote></blockquote></li><li><p>底线命令模式</p><blockquote><p>常用：</p><p>：n——切换到第n行</p><p>：w——保存</p><p>：q——退出</p><p>：q！——强制退出不保存</p><p>：wq——保存后离开</p><p>不常用：</p><p>：！<command>——暂时离开 vi 到指令行模式下执行 command 的显示结果</command></p><p>ZZ——如果修改过，保存当前文件，然后退出</p><p>ZQ——不保存，强制退出</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> 老谭 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编辑器 </tag>
            
            <tag> vim </tag>
            
            <tag> IT基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>adb</title>
      <link href="/2022/01/26/adb/"/>
      <url>/2022/01/26/adb/</url>
      
        <content type="html"><![CDATA[<h2 id="ADB总结"><a href="#ADB总结" class="headerlink" title="ADB总结"></a>ADB总结</h2><p>Android 调试桥 (adb) <a href="https://developer.android.google.cn/studio/command-line/adb?hl=zh_cn#shellcommands">谷歌文档介绍链接</a>是一种功能多样的命令行工具，可让您与设备进行通信。它是一种客户端服务端程序，包含下列三个组件：客户端、守护程序、服务器。</p><h4 id="1-ADB工作原理"><a href="#1-ADB工作原理" class="headerlink" title="1.ADB工作原理"></a>1.ADB工作原理</h4><p>服务器在启动后会与本地 TCP 端口 <strong>5037</strong> 绑定，并监听 adb 客户端发出的命令 - 所有 adb 客户端均通过端口 5037 与 adb 服务器通信。然后，服务器会与所有正在运行的设备建立连接。它通过扫描 5555 到 5585 之间（该范围供前 16 个模拟器使用）的奇数号端口查找模拟器。服务器一旦发现 adb 守护程序 (adbd)，便会与相应的端口建立连接。</p><blockquote><p>PC 端的 adb server 与手机端的守护进程 adbd 建立连接，然后 PC 端的 adb client 通过 adb server 转发命令，adbd 接收命令后解析运行。</p></blockquote><h4 id="2-基础ADB命令"><a href="#2-基础ADB命令" class="headerlink" title="2.基础ADB命令"></a>2.基础ADB命令</h4><ul><li><p>连接到ADB</p><blockquote><p>可以分为有线连接以及无线连接（Android11以上）</p></blockquote></li><li><p>查看当前设备</p><blockquote><p>adb devices</p></blockquote></li><li><p>指定设备</p><blockquote><p>adb -d（设备） -e（模拟器） -s（序列号）</p></blockquote></li><li><p>启动/停止</p><blockquote><p>adb start-server</p><p>adb kill-server</p></blockquote></li><li><p>查看adb版本</p><blockquote><p>adb version</p></blockquote></li><li><p>以root权限运行adbd</p><blockquote><p>adb root</p></blockquote></li><li><p>查看详细的adb命令</p><blockquote><p>adb –help</p></blockquote></li><li><p>安装apk</p><blockquote><p>adb install [-lrtsdg] <path_to_apk></path_to_apk></p><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>-l</td><td>将应用安装到保护目录 /mnt/asec</td></tr><tr><td>-r</td><td>允许覆盖安装</td></tr><tr><td>-t</td><td>允许安装 AndroidManifest.xml 里 application 指定 <code>android:testOnly="true"</code> 的应用</td></tr><tr><td>-s</td><td>将应用安装到 sdcard</td></tr><tr><td>-d</td><td>允许降级覆盖安装</td></tr><tr><td>-g</td><td>授予所有运行时权限</td></tr></tbody></table><blockquote><p>安装时出错：</p><table><thead><tr><th>输出</th><th>含义</th><th>解决办法</th></tr></thead><tbody><tr><td>INSTALL_FAILED_ALREADY_EXISTS</td><td>应用已经存在，或卸载了但没卸载干净</td><td><code>adb install</code> 时使用 <code>-r</code> 参数，或者先 <code>adb uninstall &lt;packagename&gt;</code> 再安装</td></tr><tr><td>INSTALL_FAILED_INVALID_APK</td><td>无效的 APK 文件</td><td></td></tr><tr><td>INSTALL_FAILED_INVALID_URI</td><td>无效的 APK 文件名</td><td>确保 APK 文件名里无中文</td></tr><tr><td>INSTALL_FAILED_INSUFFICIENT_STORAGE</td><td>空间不足</td><td>清理空间</td></tr><tr><td>INSTALL_FAILED_DUPLICATE_PACKAGE</td><td>已经存在同名程序</td><td></td></tr><tr><td>INSTALL_FAILED_NO_SHARED_USER</td><td>请求的共享用户不存在</td><td></td></tr><tr><td>INSTALL_FAILED_UPDATE_INCOMPATIBLE</td><td>以前安装过同名应用，但卸载时数据没有移除；或者已安装该应用，但签名不一致</td><td>先 <code>adb uninstall &lt;packagename&gt;</code> 再安装</td></tr><tr><td>INSTALL_FAILED_SHARED_USER_INCOMPATIBLE</td><td>请求的共享用户存在但签名不一致</td><td></td></tr><tr><td>INSTALL_FAILED_MISSING_SHARED_LIBRARY</td><td>安装包使用了设备上不可用的共享库</td><td></td></tr><tr><td>INSTALL_FAILED_REPLACE_COULDNT_DELETE</td><td>替换时无法删除</td><td></td></tr><tr><td>INSTALL_FAILED_DEXOPT</td><td>dex 优化验证失败或空间不足</td><td></td></tr><tr><td>INSTALL_FAILED_OLDER_SDK</td><td>设备系统版本低于应用要求</td><td></td></tr><tr><td>INSTALL_FAILED_CONFLICTING_PROVIDER</td><td>设备里已经存在与应用里同名的 content provider</td><td></td></tr><tr><td>INSTALL_FAILED_NEWER_SDK</td><td>设备系统版本高于应用要求</td><td></td></tr><tr><td>INSTALL_FAILED_TEST_ONLY</td><td>应用是 test-only 的，但安装时没有指定 <code>-t</code> 参数</td><td></td></tr><tr><td>INSTALL_FAILED_CPU_ABI_INCOMPATIBLE</td><td>包含不兼容设备 CPU 应用程序二进制接口的 native code</td><td></td></tr><tr><td>INSTALL_FAILED_MISSING_FEATURE</td><td>应用使用了设备不可用的功能</td><td></td></tr><tr><td>INSTALL_FAILED_CONTAINER_ERROR</td><td>1. sdcard 访问失败; 2. 应用签名与 ROM 签名一致，被当作内置应用。</td><td>1. 确认 sdcard 可用，或者安装到内置存储; 2. 打包时不与 ROM 使用相同签名。</td></tr><tr><td>INSTALL_FAILED_INVALID_INSTALL_LOCATION</td><td>1. 不能安装到指定位置; 2. 应用签名与 ROM 签名一致，被当作内置应用。</td><td>1. 切换安装位置，添加或删除 <code>-s</code> 参数; 2. 打包时不与 ROM 使用相同签名。</td></tr><tr><td>INSTALL_FAILED_MEDIA_UNAVAILABLE</td><td>安装位置不可用</td><td>一般为 sdcard，确认 sdcard 可用或安装到内置存储</td></tr><tr><td>INSTALL_FAILED_VERIFICATION_TIMEOUT</td><td>验证安装包超时</td><td></td></tr><tr><td>INSTALL_FAILED_VERIFICATION_FAILURE</td><td>验证安装包失败</td><td></td></tr><tr><td>INSTALL_FAILED_PACKAGE_CHANGED</td><td>应用与调用程序期望的不一致</td><td></td></tr><tr><td>INSTALL_FAILED_UID_CHANGED</td><td>以前安装过该应用，与本次分配的 UID 不一致</td><td>清除以前安装过的残留文件</td></tr><tr><td>INSTALL_FAILED_VERSION_DOWNGRADE</td><td>已经安装了该应用更高版本</td><td>使用 <code>-d</code> 参数</td></tr><tr><td>INSTALL_FAILED_PERMISSION_MODEL_DOWNGRADE</td><td>已安装 target SDK 支持运行时权限的同名应用，要安装的版本不支持运行时权限</td><td></td></tr><tr><td>INSTALL_PARSE_FAILED_NOT_APK</td><td>指定路径不是文件，或不是以 <code>.apk</code> 结尾</td><td></td></tr><tr><td>INSTALL_PARSE_FAILED_BAD_MANIFEST</td><td>无法解析的 AndroidManifest.xml 文件</td><td></td></tr><tr><td>INSTALL_PARSE_FAILED_UNEXPECTED_EXCEPTION</td><td>解析器遇到异常</td><td></td></tr><tr><td>INSTALL_PARSE_FAILED_NO_CERTIFICATES</td><td>安装包没有签名</td><td></td></tr><tr><td>INSTALL_PARSE_FAILED_INCONSISTENT_CERTIFICATES</td><td>已安装该应用，且签名与 APK 文件不一致</td><td>先卸载设备上的该应用，再安装</td></tr><tr><td>INSTALL_PARSE_FAILED_CERTIFICATE_ENCODING</td><td>解析 APK 文件时遇到 <code>CertificateEncodingException</code></td><td></td></tr><tr><td>INSTALL_PARSE_FAILED_BAD_PACKAGE_NAME</td><td>manifest 文件里没有或者使用了无效的包名</td><td></td></tr><tr><td>INSTALL_PARSE_FAILED_BAD_SHARED_USER_ID</td><td>manifest 文件里指定了无效的共享用户 ID</td><td></td></tr><tr><td>INSTALL_PARSE_FAILED_MANIFEST_MALFORMED</td><td>解析 manifest 文件时遇到结构性错误</td><td></td></tr><tr><td>INSTALL_PARSE_FAILED_MANIFEST_EMPTY</td><td>在 manifest 文件里找不到找可操作标签（instrumentation 或 application）</td><td></td></tr><tr><td>INSTALL_FAILED_INTERNAL_ERROR</td><td>因系统问题安装失败</td><td></td></tr><tr><td>INSTALL_FAILED_USER_RESTRICTED</td><td>用户被限制安装应用</td><td></td></tr><tr><td>INSTALL_FAILED_DUPLICATE_PERMISSION</td><td>应用尝试定义一个已经存在的权限名称</td><td></td></tr><tr><td>INSTALL_FAILED_NO_MATCHING_ABIS</td><td>应用包含设备的应用程序二进制接口不支持的 native code</td><td></td></tr><tr><td>INSTALL_CANCELED_BY_USER</td><td>应用安装需要在设备上确认，但未操作设备或点了取消</td><td>在设备上同意安装</td></tr><tr><td>INSTALL_FAILED_ACWF_INCOMPATIBLE</td><td>应用程序与设备不兼容</td><td></td></tr><tr><td>does not contain AndroidManifest.xml</td><td>无效的 APK 文件</td><td></td></tr><tr><td>is not a valid zip file</td><td>无效的 APK 文件</td><td></td></tr><tr><td>Offline</td><td>设备未连接成功</td><td>先将设备与 adb 连接成功</td></tr><tr><td>unauthorized</td><td>设备未授权允许调试</td><td></td></tr><tr><td>error: device not found</td><td>没有连接成功的设备</td><td>先将设备与 adb 连接成功</td></tr><tr><td>protocol failure</td><td>设备已断开连接</td><td>先将设备与 adb 连接成功</td></tr><tr><td>Unknown option: -s</td><td>Android 2.2 以下不支持安装到 sdcard</td><td>不使用 <code>-s</code> 参数</td></tr><tr><td>No space left on device</td><td>空间不足</td><td>清理空间</td></tr><tr><td>Permission denied … sdcard …</td><td>sdcard 不可用</td><td></td></tr><tr><td>signatures do not match the previously installed version; ignoring!</td><td>已安装该应用且签名不一致</td><td></td></tr></tbody></table></blockquote><p>安装的内部原理：</p><ol><li>push apk 文件到 /data/local/tmp。</li><li>调用 pm install 安装。</li><li>删除 /data/local/tmp 下的对应 apk 文件。</li></ol></blockquote></li><li><p>卸载apk</p><blockquote><p>adb uninstall [-k] <packagename>  -k 参数可选，表示卸载应用但保留数据和缓存目录。</packagename></p></blockquote></li><li><p>文件管理</p><ul><li><p>复制设备里的文件到电脑</p><blockquote><p>adb pull &lt;设备里的文件路径&gt; [电脑上的目录]</p></blockquote></li><li><p>复制电脑里的文件到设备</p><blockquote><p>adb push &lt;电脑上的文件路径&gt; &lt;设备里的目录&gt;</p></blockquote></li></ul></li><li><p>查看日志</p><p>Android 系统的日志分为两部分，底层的 Linux 内核日志输出到 /proc/kmsg，Android 的日志输出到 /dev/log。</p><ul><li><p>Android日志</p><blockquote><p>[adb] logcat [<option>] … [<filter-spec>] …</filter-spec></option></p><p>（1）按级别过滤日志——Android 的日志分为如下几个优先级（priority）：</p><ul><li>V —— Verbose（最低，输出得最多）</li><li>D —— Debug I —— Info</li><li>W —— Warning</li><li>E —— Error</li><li>F—— Fatal</li><li>S —— Silent（最高，啥也不输出）</li></ul><p>例：adb logcat *:W 会将 Warning、Error、Fatal 和 Silent 日志输出。</p><p>（2）按 tag 和级别过滤日志</p><p>（3）清空日志</p><blockquote><p>adb logcat -c</p></blockquote></blockquote></li><li><p>内核日志</p><blockquote><p>adb shell dmesg</p></blockquote></li></ul></li></ul><h4 id="3-ADB-SHELL"><a href="#3-ADB-SHELL" class="headerlink" title="3.ADB SHELL"></a>3.ADB SHELL</h4><p>Android 提供了大多数常见的 Unix 命令行工具。</p><blockquote><p>进入adb shell后，可以使用大多数unix命令 例如：adb shell ls /system/bin</p></blockquote><ol><li><p>应用管理pm</p><ul><li>查看应用列表</li></ul><blockquote><p>adb shell pm list packages   可以加一些参数进行过滤查看不同的列表</p><table><thead><tr><th>参数</th><th>显示列表</th></tr></thead><tbody><tr><td>无</td><td>所有应用</td></tr><tr><td>-f</td><td>显示应用关联的 apk 文件</td></tr><tr><td>-d</td><td>只显示 disabled 的应用</td></tr><tr><td>-e</td><td>只显示 enabled 的应用</td></tr><tr><td>-s</td><td>只显示系统应用</td></tr><tr><td>-3</td><td>只显示第三方应用</td></tr><tr><td>-i</td><td>显示应用的 installer</td></tr><tr><td>-u</td><td>包含已卸载应用</td></tr><tr><td><code>&lt;FILTER&gt;</code></td><td>包名包含 <code>&lt;FILTER&gt;</code> 字符串</td></tr></tbody></table></blockquote><ul><li><p>清除应用数据与缓存</p><blockquote><p>adb shell pm clear <packagename>  </packagename></p></blockquote></li><li><p>禁用应用和启动</p><blockquote><p>adb shell pm disable <packagename></packagename></p><p>adb shell pm enable  <packagename></packagename></p></blockquote></li><li><p>授予撤销应用权限</p><blockquote><p>adb shell pm grant <packagename> <package_permission></package_permission></packagename></p><p>adb shell pm revoke <packagename> <package_permission></package_permission></packagename></p></blockquote></li></ul></li><li><p>Activity管理am</p><ul><li>am命令总览:</li></ul><blockquote><table><thead><tr><th>command</th><th>用途</th></tr></thead><tbody><tr><td><code>start [options] &lt;INTENT&gt;</code></td><td>启动 <code>&lt;INTENT&gt;</code> 指定的 Activity</td></tr><tr><td><code>startservice [options] &lt;INTENT&gt;</code></td><td>启动 <code>&lt;INTENT&gt;</code> 指定的 Service</td></tr><tr><td><code>broadcast [options] &lt;INTENT&gt;</code></td><td>发送 <code>&lt;INTENT&gt;</code> 指定的广播</td></tr><tr><td><code>force-stop &lt;packagename&gt;</code></td><td>停止 <code>&lt;packagename&gt;</code> 相关的进程</td></tr></tbody></table><p>intent可以采用action、category、component：</p><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td><code>-a &lt;ACTION&gt;</code></td><td>指定 action，比如 <code>android.intent.action.VIEW</code></td></tr><tr><td><code>-c &lt;CATEGORY&gt;</code></td><td>指定 category，比如 <code>android.intent.category.APP_CONTACTS</code></td></tr><tr><td><code>-n &lt;COMPONENT&gt;</code></td><td>指定完整 component 名，用于明确指定启动哪个 Activity，如 <code>com.example.app/.ExampleActivity</code></td></tr></tbody></table><p><code>&lt;INTENT&gt;</code> 可以带数据：</p><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td><code>--esn &lt;EXTRA_KEY&gt;</code></td><td>null 值（只有 key 名）</td></tr><tr><td>`-e</td><td>–es <extra_key> <extra_string_value>`</extra_string_value></extra_key></td></tr><tr><td><code>--ez &lt;EXTRA_KEY&gt; &lt;EXTRA_BOOLEAN_VALUE&gt;</code></td><td>boolean 值</td></tr><tr><td><code>--ei &lt;EXTRA_KEY&gt; &lt;EXTRA_INT_VALUE&gt;</code></td><td>integer 值</td></tr><tr><td><code>--el &lt;EXTRA_KEY&gt; &lt;EXTRA_LONG_VALUE&gt;</code></td><td>long 值</td></tr><tr><td><code>--ef &lt;EXTRA_KEY&gt; &lt;EXTRA_FLOAT_VALUE&gt;</code></td><td>float 值</td></tr><tr><td><code>--eu &lt;EXTRA_KEY&gt; &lt;EXTRA_URI_VALUE&gt;</code></td><td>URI</td></tr><tr><td><code>--ecn &lt;EXTRA_KEY&gt; &lt;EXTRA_COMPONENT_NAME_VALUE&gt;</code></td><td>component name</td></tr><tr><td><code>--eia &lt;EXTRA_KEY&gt; &lt;EXTRA_INT_VALUE&gt;[,&lt;EXTRA_INT_VALUE...]</code></td><td>integer 数组</td></tr><tr><td><code>--ela &lt;EXTRA_KEY&gt; &lt;EXTRA_LONG_VALUE&gt;[,&lt;EXTRA_LONG_VALUE...]</code></td><td>long 数组</td></tr></tbody></table></blockquote><ul><li><p>举例：</p><blockquote><p>调用activity</p><blockquote><p>adb shell am start -n org.mazhuang.boottimemeasure/.MainActivity –es “toast” “hello, world”      表示调起 org.mazhuang.boottimemeasure/.MainActivity 并传给它 string 数据键值对 toast - hello, world。</p></blockquote><p>调用service</p><blockquote><p>adb shell am startservice -n com.tencent.mm/.plugin.accountsync.model.AccountAuthenticatorService</p></blockquote><p>发送广播</p><blockquote><p>adb shell am broadcast -a android.intent.action.BOOT_COMPLETED -n org.mazhuang.boottimemeasure/.BootCompletedReceiver</p></blockquote></blockquote></li><li><p>强制停止应用</p><blockquote><p>adb shell am force-stop <packagename></packagename></p></blockquote></li><li><p>禁用/启动应用</p></li></ul></li><li><p>dumpsys</p><ul><li><p>看前台activity</p><blockquote><p>adb shell dumpsys activity activities | grep mFocusedActivity</p></blockquote></li><li><p>查看正在运行的service</p><blockquote><p>adb shell dumpsys activity services [<packagename>]</packagename></p><p><code>&lt;packagename&gt;</code> 参数不是必须的，指定 <code>&lt;packagename&gt;</code> 表示查看与某个包名相关的 Services，不指定表示查看所有 Services。</p></blockquote></li><li><p>查看应用详细信息</p><blockquote><p>adb shell dumpsys package <packagename></packagename></p></blockquote></li><li><p>电池状况</p><blockquote><p>adb shell dumpsys battery</p></blockquote></li></ul></li><li><p>模拟按键输入</p><ul><li>adb shell input keyevent</li><li>adb shell input tap（点击）/swipe（滑动，可用于滑动解锁）/text（输入文字）</li></ul><blockquote><table><thead><tr><th>keycode</th><th>含义</th></tr></thead><tbody><tr><td>3</td><td>HOME 键</td></tr><tr><td>4</td><td>返回键</td></tr><tr><td>5</td><td>打开拨号应用</td></tr><tr><td>6</td><td>挂断电话</td></tr><tr><td>24</td><td>增加音量</td></tr><tr><td>25</td><td>降低音量</td></tr><tr><td>26</td><td>电源键</td></tr><tr><td>27</td><td>拍照（需要在相机应用里）</td></tr><tr><td>64</td><td>打开浏览器</td></tr><tr><td>82</td><td>菜单键</td></tr><tr><td>85</td><td>播放/暂停</td></tr><tr><td>86</td><td>停止播放</td></tr><tr><td>87</td><td>播放下一首</td></tr><tr><td>88</td><td>播放上一首</td></tr><tr><td>122</td><td>移动光标到行首或列表顶部</td></tr><tr><td>123</td><td>移动光标到行末或列表底部</td></tr><tr><td>126</td><td>恢复播放</td></tr><tr><td>127</td><td>暂停播放</td></tr><tr><td>164</td><td>静音</td></tr><tr><td>176</td><td>打开系统设置</td></tr><tr><td>187</td><td>切换应用</td></tr><tr><td>207</td><td>打开联系人</td></tr><tr><td>208</td><td>打开日历</td></tr><tr><td>209</td><td>打开音乐</td></tr><tr><td>210</td><td>打开计算器</td></tr><tr><td>220</td><td>降低屏幕亮度</td></tr><tr><td>221</td><td>提高屏幕亮度</td></tr><tr><td>223</td><td>系统休眠</td></tr><tr><td>224</td><td>点亮屏幕</td></tr><tr><td>231</td><td>打开语音助手</td></tr><tr><td>276</td><td>如果没有 wakelock 则让系统休眠</td></tr></tbody></table></blockquote></li><li><p>查看设备信息</p><blockquote><p>adb shell getprop ro.product.model</p></blockquote></li></ol><h4 id="4-其他命令"><a href="#4-其他命令" class="headerlink" title="4.其他命令"></a>4.其他命令</h4><ul><li><p>屏幕截图</p><blockquote><p>adb exec-out screencap -p &gt; sc.png</p></blockquote></li><li><p>录制屏幕</p><blockquote><p>adb shell screenrecord /sdcard/filename.mp4</p></blockquote></li><li><p>查看设备是否解锁</p><blockquote><p>adb shell getprop ro.boot.flash.locked</p></blockquote></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> adb </tag>
            
            <tag> Android </tag>
            
            <tag> 工具介绍 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>老房子的美</title>
      <link href="/2022/01/03/lao-fang-zi-de-mei/"/>
      <url>/2022/01/03/lao-fang-zi-de-mei/</url>
      
        <content type="html"><![CDATA[<p><img src="/2022/01/03/lao-fang-zi-de-mei/1.png"></p>]]></content>
      
      
      <categories>
          
          <category> 小曹 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 美术鉴赏 </tag>
            
            <tag> 课程 </tag>
            
            <tag> 美术史 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
